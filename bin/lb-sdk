#!/usr/bin/env node
/**
 * @module lb-sdk
 * @description
 * @license MTI
 *
 * This CLI Tool loads client sdk generators for the selected library
 * currently the only support is for Angular2 but drivers can be
 * selected in order to work in different environments like nativescript
 * and angular unicersal.
 */
var path = require('path');
var semver = require('semver');
var optimist = require('optimist');
var generator = require('../index');
var fs = require('extfs');
var chalk = require('chalk');
var through = require('through2');
/**
 * CLI Options Description
 */

module.exports = function (options) {

  var argv = optimist
      .usage('\n******************************************* LoopBack SDK Builder 2.0 *******************************************\n' +
          '\nGenerate Client SDK for your LoopBack Application.' +
          '\nUsage:' +
          '\n ./node_modules/.bin/lb-sdk server/server app/shared/sdk -d [ng4web | nativescript2] -i [enabled | disabled]')
      .describe('l', 'Client\'s library (angular2, react <todo>, ...)')
      .describe('d', 'Platform specific drivers (ng4web, nativescript2, ng2universal <todo>)')
      .describe('i', 'Enable PubSub functionality for loopback-component-pubsub')
      .describe('w', 'Automatically wipe SDK Directory')
      .default('l', 'angular2')
      .default('d', 'ng4web')
      .default('i', 'disabled')
      .default('w', 'disabled')
      .alias({u: 'url', m: 'module-name', l: 'library', i: 'io', d: 'driver', w: 'wipe'})
      .demand(1)
      .argv;
  /**
   * Splash ACII Art
   */
  console.log(chalk.green('\n\n=========================================================================================='));
  console.log(chalk.green('*    __                  ___           __     _______  __ __  ___       _ __   __        *'));
  console.log(chalk.green('*   / /  ___  ___  ___  / _ )___ _____/ /__  / __/ _ \\/ //_/ / _ )__ __(_) /__/ /__ ____ *'));
  console.log(chalk.green('*  / /__/ _ \\/ _ \\/ _ \\/ _  / _ `/ __/  \'_/ _\\ \\/ // / ,<   / _  / // / / / _  / -_) __/ *'));
  console.log(chalk.green('* /____/\\___/\\___/ .__/____/\\_,_/\\__/_/\\_\\ /___/____/_/|_| /____/\\_,_/_/_/\\_,_/\\__/_/V2  *'));
  console.log(chalk.green('*                 /_/                                                                    *'));
  console.log(chalk.green('*                                                                                        *'));
  console.log(chalk.green('*========================================================================================*'));
  console.log(chalk.green('*                                                                                        *'));
  console.log(chalk.green('*             Developed & Maintained by The MEAN Expert · http://mean.expert             *'));
  console.log(chalk.green('*                          http://github.com/mean-expert-official                        *'));
  console.log(chalk.green('*                                                                                        *'));
  console.log(chalk.green('*                                      CONTRIBUTORS                                      *'));
  console.log(chalk.green('*                         João Ribeiro <http://jonnybgod.ghost.io>                       *'));
  console.log(chalk.green('*                      Nikolay Matiushenkov <https://github.com/mnvx>                    *'));
  console.log(chalk.green('*                         Sylvain Dumont <https://www.weboaks.com>                       *'));
  console.log(chalk.green('*                                                                                        *'));
  console.log(chalk.green('*                                 ORIGINALLY FORKED FROM                                 *'));
  console.log(chalk.green('*                      Miroslav Bajtos\' <miroslav@strongloop.com>                        *'));
  console.log(chalk.green('*                   https://github.com/strongloop/loopback-sdk-angular                   *'));
  console.log(chalk.green('*                                                                                        *'));
  console.log(chalk.green('=========================================================================================='));

  console.log('\n\THE MAGIC IS ABOUT TO HAPPEN ...\n\n');

  /**
   * Set Reference For Main Options
   */
  var appFile = path.resolve(options.serverPath);
  /**
   * Load and Boot LoopBack Application
   */
  var app = require(appFile);

  // Default Values
  var context = {
    app: app,
    framework: 'angular2',
    moduleName: 'sdk',
    apiUrl: options.apiUrl,
    outputFolder: options.outputFolder,
    isIo: 'disabled',
    driver: 'ng4web',
    wipe: 'disabled'
  };

//assertLoopBackVersion();
  if (app.booting) {
    app.on('booted', verifyPath(context));
  } else {
    verifyPath(context);
  }

  return through.obj(function (file, enc, cb) {

    cb();
    return;
  })


}

function verifyPath(context) {

  console.log("this is the context: " + context.outputFolder);

  runGenerator(context);

  //
  //if (fs.isEmptySync(context.outputFolder)) {
  //  console.log("got here1")
  //  runGenerator(context, function(){
  //    cb();
  //  });
  //} else if (fs.isEmptySync(context.outputFolder) || context.wipe === 'enabled') {
  //  console.log("got here2")
  //
  //  console.log(chalk.yellow('WARNING: The targeted SDK Directory is not empty but the "-w" flag is enabled. Removing contents.\n\n'));
  //  runGenerator(context, function(){
  //    cb();
  //  });
  //} else {
  //  runGenerator(context, function(){
  //    cb();
  //  });
  //};
}

/**
 * Generator Logic
 */
function runGenerator(context) {

  // Load Selected Generator
  console.info('Loading Framework %s', context.framework);
  console.info('Generating %j for the API endpoint %j', context.moduleName, context.apiUrl);
  //try {
  generator[context.framework](context);
  console.info('\n\nEnjoy!!!');
  //} catch (err) {
  //  throw new Error(err);
  //}
  // The app.js scaffolded by `slc lb project` loads strong-agent module that
  // used to have a bug where it prevented the application from exiting.
  // To work around that issue, we are explicitly exiting here.
  //
  // The exit is deferred to the next tick in order to prevent the Node bug:
  // https://github.com/joyent/node/issues/3584
  // process.nextTick(function () {
  //   process.exit();
  // });
}
//--- helpers ---//
function assertLoopBackVersion() {
  var Module = require('module');
  // Load the 'loopback' module in the context of the app.js file,
  // usually from node_modules/loopback of the project of app.js
  var loopback = Module._load('loopback', Module._cache[appFile]);
  if (semver.lt(loopback.version, '1.6.0')) {
    console.error(
        '\nThe code generator does not support applications based\n' +
        'on LoopBack versions older than 1.6.0. Please upgrade your\n' +
        'project to a recent version of LoopBack and run this tool again.\n');
    process.exit(1);
  }
}
